/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.turingtraining.pos.ui;

import com.turingtraining.pos.model.Category;
import com.turingtraining.pos.model.Item;
import com.turingtraining.pos.model.Stock;
import com.turingtraining.pos.model.User;
import com.turingtraining.pos.service.CategoryService;
import com.turingtraining.pos.service.CategoryServiceImpl;
import com.turingtraining.pos.service.ItemService;
import com.turingtraining.pos.service.ItemServiceImpl;
import com.turingtraining.pos.service.StockService;
import com.turingtraining.pos.service.StockServiceImpl;
import com.turingtraining.pos.util.SystemUtil;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author wailwinphyo
 */
public class StockPage extends javax.swing.JFrame {

    PageSwitcher ui = new PageSwitcher();
    CategoryService catService = new CategoryServiceImpl();
    ItemService itemService = new ItemServiceImpl();
    StockService stockService = new StockServiceImpl();

    /**
     * Creates new form StockPage
     */
    public StockPage() {
        initComponents();
        loadData();
    }

    private void loadData() {
        List<Category> catList = catService.getCategoryListForStock();
        DefaultComboBoxModel jcmbCat = (DefaultComboBoxModel) this.jcmbCategory.getModel();
        catList.forEach(c -> jcmbCat.addElement(c));
        this.jcmbCategory.setModel(jcmbCat);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpInsertStock = new javax.swing.JPanel();
        jtfPrice = new javax.swing.JTextField();
        jcmbItem = new javax.swing.JComboBox<>();
        jlProduct = new javax.swing.JLabel();
        jlQty = new javax.swing.JLabel();
        jlPrice = new javax.swing.JLabel();
        jbtInsertStock = new javax.swing.JButton();
        jlCategory = new javax.swing.JLabel();
        jcmbCategory = new javax.swing.JComboBox<>();
        jspQty = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jmiAddNewCashier = new javax.swing.JMenuItem();
        jmiExit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jmiAddStock = new javax.swing.JMenuItem();
        jmiProduct = new javax.swing.JMenuItem();
        jmiCategory = new javax.swing.JMenuItem();
        jmiStockReport = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jmiSaleReport = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Mini POS");

        jpInsertStock.setPreferredSize(new java.awt.Dimension(36, 31));

        jtfPrice.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtfPrice.setText("0");

        jcmbItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcmbItemActionPerformed(evt);
            }
        });

        jlProduct.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jlProduct.setText("Item : ");

        jlQty.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jlQty.setText("Quantity : ");

        jlPrice.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jlPrice.setText("Price : ");

        jbtInsertStock.setText("Insert Stock");
        jbtInsertStock.setPreferredSize(new java.awt.Dimension(36, 31));
        jbtInsertStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtInsertStockActionPerformed(evt);
            }
        });

        jlCategory.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jlCategory.setLabelFor(jcmbCategory);
        jlCategory.setText("Category : ");

        jcmbCategory.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcmbCategoryItemStateChanged(evt);
            }
        });
        jcmbCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcmbCategoryActionPerformed(evt);
            }
        });
        jcmbCategory.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jcmbCategoryPropertyChange(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Add Stock");

        jButton1.setText("Back To Home");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpInsertStockLayout = new javax.swing.GroupLayout(jpInsertStock);
        jpInsertStock.setLayout(jpInsertStockLayout);
        jpInsertStockLayout.setHorizontalGroup(
            jpInsertStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpInsertStockLayout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addGroup(jpInsertStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jlPrice)
                    .addComponent(jlQty)
                    .addComponent(jlProduct)
                    .addComponent(jlCategory))
                .addGap(45, 45, 45)
                .addGroup(jpInsertStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpInsertStockLayout.createSequentialGroup()
                        .addComponent(jbtInsertStock, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1))
                    .addGroup(jpInsertStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jtfPrice, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jcmbItem, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jspQty, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jcmbCategory, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(211, Short.MAX_VALUE))
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jpInsertStockLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jlPrice, jlProduct, jlQty, jtfPrice});

        jpInsertStockLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jcmbCategory, jlCategory});

        jpInsertStockLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jcmbItem, jspQty});

        jpInsertStockLayout.setVerticalGroup(
            jpInsertStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpInsertStockLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(31, 31, 31)
                .addGroup(jpInsertStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jcmbCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlCategory))
                .addGap(18, 18, 18)
                .addGroup(jpInsertStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jcmbItem, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlProduct))
                .addGap(18, 18, 18)
                .addGroup(jpInsertStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlQty)
                    .addComponent(jspQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpInsertStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlPrice)
                    .addComponent(jtfPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpInsertStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtInsertStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(47, 47, 47))
        );

        jpInsertStockLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jcmbItem, jlPrice, jlProduct, jlQty, jspQty});

        jpInsertStockLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jcmbCategory, jlCategory});

        jMenu1.setText("File");
        jMenu1.setMargin(new java.awt.Insets(3, 6, 3, 3));

        jmiAddNewCashier.setText("Add User");
        jmiAddNewCashier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiAddNewCashierActionPerformed(evt);
            }
        });
        jMenu1.add(jmiAddNewCashier);

        jmiExit.setText("Exit");
        jmiExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiExitActionPerformed(evt);
            }
        });
        jMenu1.add(jmiExit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("System Config");
        jMenu2.setMargin(new java.awt.Insets(3, 6, 3, 3));

        jmiAddStock.setText("Add Stock");
        jmiAddStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiAddStockActionPerformed(evt);
            }
        });
        jMenu2.add(jmiAddStock);

        jmiProduct.setText("Product");
        jmiProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiProductActionPerformed(evt);
            }
        });
        jMenu2.add(jmiProduct);

        jmiCategory.setText("Category");
        jmiCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCategoryActionPerformed(evt);
            }
        });
        jMenu2.add(jmiCategory);

        jMenuBar1.add(jMenu2);

        jmiStockReport.setText("Reports");

        jMenuItem4.setText("Stock Report");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jmiStockReport.add(jMenuItem4);

        jmiSaleReport.setText("Monthly Report");
        jmiSaleReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiSaleReportActionPerformed(evt);
            }
        });
        jmiStockReport.add(jmiSaleReport);

        jMenuItem7.setText("Sale Report");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jmiStockReport.add(jMenuItem7);

        jMenuBar1.add(jmiStockReport);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpInsertStock, javax.swing.GroupLayout.DEFAULT_SIZE, 776, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpInsertStock, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jcmbItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcmbItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcmbItemActionPerformed

    private void jcmbCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcmbCategoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcmbCategoryActionPerformed

    private void jcmbCategoryPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jcmbCategoryPropertyChange

    }//GEN-LAST:event_jcmbCategoryPropertyChange

    private void jbtInsertStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtInsertStockActionPerformed
        try {
            Item item = (Item) this.jcmbItem.getSelectedItem();
            Integer qty = (Integer) this.jspQty.getValue();
            Double price = Double.parseDouble(this.jtfPrice.getText());
            if (qty < 0 || price <= 0) {
                throw new Exception("Invalid Inputs");
            }
            Stock s = new Stock(item.getId(), price, qty, "Stock Insertion");
            stockService.refillStock(s);
            JOptionPane.showMessageDialog(null, "Successfully Inserted! ", "Stock Insertion", JOptionPane.INFORMATION_MESSAGE);
            this.jcmbItem.setSelectedIndex(0);
            this.jspQty.setValue(0);
            this.jtfPrice.setText("0");
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Failed ! " + " Invalid Price", "Stock Insertion", JOptionPane.ERROR_MESSAGE);
            java.util.logging.Logger.getLogger(StockPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Failed ! " + ex.getMessage(), "Stock Insertion", JOptionPane.ERROR_MESSAGE);
            java.util.logging.Logger.getLogger(StockPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtInsertStockActionPerformed

    private void jcmbCategoryItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcmbCategoryItemStateChanged
        Category cat = (Category) this.jcmbCategory.getSelectedItem();
        List<Item> itemList = itemService.getItemListByCatId(cat.getId());
        DefaultComboBoxModel model = (DefaultComboBoxModel) this.jcmbItem.getModel();
        model.removeAllElements();
        itemList.forEach(c -> model.addElement(c));
        this.jcmbItem.setModel(model);
    }//GEN-LAST:event_jcmbCategoryItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        PageSwitcher.returnHome(this);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jmiAddNewCashierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiAddNewCashierActionPerformed
        User u = SystemUtil.getCurrentUser();
        if ("ROLE_ADMIN".equals(u.getUserType())) {
            PageSwitcher.registerNewCashier(this);
        } else {
            JOptionPane.showMessageDialog(null, "Only admin can add cashier", "UnAuthorized", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jmiAddNewCashierActionPerformed

    private void jmiExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiExitActionPerformed
        this.dispose();
    }//GEN-LAST:event_jmiExitActionPerformed

    private void jmiAddStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiAddStockActionPerformed
        new StockPage().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jmiAddStockActionPerformed

    private void jmiProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiProductActionPerformed
        PageSwitcher.ItemPage(this);
    }//GEN-LAST:event_jmiProductActionPerformed

    private void jmiCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCategoryActionPerformed
        PageSwitcher.CategoryPage(this);
    }//GEN-LAST:event_jmiCategoryActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        PageSwitcher.showRemainingStock(this);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jmiSaleReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiSaleReportActionPerformed
        PageSwitcher.showMonthlySaleReport(this);
    }//GEN-LAST:event_jmiSaleReportActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        PageSwitcher.showSaleReport(this);
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StockPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new StockPage().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JButton jbtInsertStock;
    private javax.swing.JComboBox<Category> jcmbCategory;
    private javax.swing.JComboBox<Item> jcmbItem;
    private javax.swing.JLabel jlCategory;
    private javax.swing.JLabel jlPrice;
    private javax.swing.JLabel jlProduct;
    private javax.swing.JLabel jlQty;
    private javax.swing.JMenuItem jmiAddNewCashier;
    private javax.swing.JMenuItem jmiAddStock;
    private javax.swing.JMenuItem jmiCategory;
    private javax.swing.JMenuItem jmiExit;
    private javax.swing.JMenuItem jmiProduct;
    private javax.swing.JMenuItem jmiSaleReport;
    private javax.swing.JMenu jmiStockReport;
    private javax.swing.JPanel jpInsertStock;
    private javax.swing.JSpinner jspQty;
    private javax.swing.JTextField jtfPrice;
    // End of variables declaration//GEN-END:variables
}
